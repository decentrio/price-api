syntax = "proto3";
package ticker;

import "google/api/annotations.proto";
import "ticker/ticker.proto";

option go_package = "github.com/decentrio/price-api/types/ticker";

service TickerQuery {
  // Tickers provides 24-hour pricing and volume information.
  rpc Tickers(TickersRequest) returns (TickersResponse) {
    option (google.api.http) = {
      get : "/tickers"
      response_body : "tickers"
    };
  }

  // Liquidity
  rpc PoolTotalLiquidityInUsd(PoolTotalLiquidityInUsdRequest) returns (PoolTotalLiquidityInUsdResponse) {
    option (google.api.http).get = "/liquidity/{contract_id}/total_in_usd";
  }
}

message TickersRequest {}

message TickersResponse { repeated TickerInfo tickers = 1; }

message PoolTotalLiquidityInUsdRequest{
  string contract_id = 1;
}

message PoolTotalLiquidityInUsdResponse{
  double amount = 1;
}