// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: ticker/ticker.proto

package ticker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Ticker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TickerId       string `protobuf:"bytes,1,opt,name=ticker_id,json=tickerId,proto3" json:"ticker_id,omitempty"`
	BaseCurrency   string `protobuf:"bytes,2,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	TargetCurrency string `protobuf:"bytes,3,opt,name=target_currency,json=targetCurrency,proto3" json:"target_currency,omitempty"`
	PoolId         string `protobuf:"bytes,4,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	LastPrice      string `protobuf:"bytes,5,opt,name=last_price,json=lastPrice,proto3" json:"last_price,omitempty"`
	BaseVolume     uint64 `protobuf:"varint,6,opt,name=base_volume,json=baseVolume,proto3" json:"base_volume,omitempty"`
	TargetVolume   uint64 `protobuf:"varint,7,opt,name=target_volume,json=targetVolume,proto3" json:"target_volume,omitempty"`
	LiquidityInUsd uint64 `protobuf:"varint,8,opt,name=liquidity_in_usd,json=liquidityInUsd,proto3" json:"liquidity_in_usd,omitempty"`
}

func (x *Ticker) Reset() {
	*x = Ticker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticker_ticker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticker) ProtoMessage() {}

func (x *Ticker) ProtoReflect() protoreflect.Message {
	mi := &file_ticker_ticker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticker.ProtoReflect.Descriptor instead.
func (*Ticker) Descriptor() ([]byte, []int) {
	return file_ticker_ticker_proto_rawDescGZIP(), []int{0}
}

func (x *Ticker) GetTickerId() string {
	if x != nil {
		return x.TickerId
	}
	return ""
}

func (x *Ticker) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *Ticker) GetTargetCurrency() string {
	if x != nil {
		return x.TargetCurrency
	}
	return ""
}

func (x *Ticker) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *Ticker) GetLastPrice() string {
	if x != nil {
		return x.LastPrice
	}
	return ""
}

func (x *Ticker) GetBaseVolume() uint64 {
	if x != nil {
		return x.BaseVolume
	}
	return 0
}

func (x *Ticker) GetTargetVolume() uint64 {
	if x != nil {
		return x.TargetVolume
	}
	return 0
}

func (x *Ticker) GetLiquidityInUsd() uint64 {
	if x != nil {
		return x.LiquidityInUsd
	}
	return 0
}

type TickerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TickerId       string `protobuf:"bytes,1,opt,name=ticker_id,proto3" json:"ticker_id,omitempty"`
	BaseCurrency   string `protobuf:"bytes,2,opt,name=base_currency,proto3" json:"base_currency,omitempty"`
	TargetCurrency string `protobuf:"bytes,3,opt,name=target_currency,proto3" json:"target_currency,omitempty"`
	PoolId         string `protobuf:"bytes,4,opt,name=pool_id,proto3" json:"pool_id,omitempty"`
	LastPrice      string `protobuf:"bytes,5,opt,name=last_price,proto3" json:"last_price,omitempty"`
	BaseVolume     string `protobuf:"bytes,6,opt,name=base_volume,proto3" json:"base_volume,omitempty"`
	TargetVolume   string `protobuf:"bytes,7,opt,name=target_volume,proto3" json:"target_volume,omitempty"`
	LiquidityInUsd string `protobuf:"bytes,8,opt,name=liquidity_in_usd,proto3" json:"liquidity_in_usd,omitempty"`
}

func (x *TickerInfo) Reset() {
	*x = TickerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticker_ticker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickerInfo) ProtoMessage() {}

func (x *TickerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticker_ticker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickerInfo.ProtoReflect.Descriptor instead.
func (*TickerInfo) Descriptor() ([]byte, []int) {
	return file_ticker_ticker_proto_rawDescGZIP(), []int{1}
}

func (x *TickerInfo) GetTickerId() string {
	if x != nil {
		return x.TickerId
	}
	return ""
}

func (x *TickerInfo) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *TickerInfo) GetTargetCurrency() string {
	if x != nil {
		return x.TargetCurrency
	}
	return ""
}

func (x *TickerInfo) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *TickerInfo) GetLastPrice() string {
	if x != nil {
		return x.LastPrice
	}
	return ""
}

func (x *TickerInfo) GetBaseVolume() string {
	if x != nil {
		return x.BaseVolume
	}
	return ""
}

func (x *TickerInfo) GetTargetVolume() string {
	if x != nil {
		return x.TargetVolume
	}
	return ""
}

func (x *TickerInfo) GetLiquidityInUsd() string {
	if x != nil {
		return x.LiquidityInUsd
	}
	return ""
}

type TickersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TickersRequest) Reset() {
	*x = TickersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticker_ticker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickersRequest) ProtoMessage() {}

func (x *TickersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticker_ticker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickersRequest.ProtoReflect.Descriptor instead.
func (*TickersRequest) Descriptor() ([]byte, []int) {
	return file_ticker_ticker_proto_rawDescGZIP(), []int{2}
}

type TickersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickers []*TickerInfo `protobuf:"bytes,1,rep,name=tickers,proto3" json:"tickers,omitempty"`
}

func (x *TickersResponse) Reset() {
	*x = TickersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticker_ticker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickersResponse) ProtoMessage() {}

func (x *TickersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticker_ticker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickersResponse.ProtoReflect.Descriptor instead.
func (*TickersResponse) Descriptor() ([]byte, []int) {
	return file_ticker_ticker_proto_rawDescGZIP(), []int{3}
}

func (x *TickersResponse) GetTickers() []*TickerInfo {
	if x != nil {
		return x.Tickers
	}
	return nil
}

var File_ticker_ticker_proto protoreflect.FileDescriptor

var file_ticker_ticker_proto_rawDesc = []byte{
	0x0a, 0x13, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x22, 0x9b, 0x02,
	0x0a, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61,
	0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x6e, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x55, 0x73, 0x64, 0x22, 0xa8, 0x02, 0x0a, 0x0a,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x28,
	0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x6e, 0x5f, 0x75, 0x73, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x0f, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x42, 0x7e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x0b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x6f, 0x2f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa, 0x02, 0x06, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0xca, 0x02, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0xe2, 0x02, 0x12, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_ticker_ticker_proto_rawDescOnce sync.Once
	file_ticker_ticker_proto_rawDescData = file_ticker_ticker_proto_rawDesc
)

func file_ticker_ticker_proto_rawDescGZIP() []byte {
	file_ticker_ticker_proto_rawDescOnce.Do(func() {
		file_ticker_ticker_proto_rawDescData = protoimpl.X.CompressGZIP(file_ticker_ticker_proto_rawDescData)
	})
	return file_ticker_ticker_proto_rawDescData
}

var file_ticker_ticker_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ticker_ticker_proto_goTypes = []any{
	(*Ticker)(nil),          // 0: ticker.Ticker
	(*TickerInfo)(nil),      // 1: ticker.TickerInfo
	(*TickersRequest)(nil),  // 2: ticker.TickersRequest
	(*TickersResponse)(nil), // 3: ticker.TickersResponse
}
var file_ticker_ticker_proto_depIdxs = []int32{
	1, // 0: ticker.TickersResponse.tickers:type_name -> ticker.TickerInfo
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ticker_ticker_proto_init() }
func file_ticker_ticker_proto_init() {
	if File_ticker_ticker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ticker_ticker_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Ticker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticker_ticker_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TickerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticker_ticker_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TickersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticker_ticker_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TickersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ticker_ticker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ticker_ticker_proto_goTypes,
		DependencyIndexes: file_ticker_ticker_proto_depIdxs,
		MessageInfos:      file_ticker_ticker_proto_msgTypes,
	}.Build()
	File_ticker_ticker_proto = out.File
	file_ticker_ticker_proto_rawDesc = nil
	file_ticker_ticker_proto_goTypes = nil
	file_ticker_ticker_proto_depIdxs = nil
}
